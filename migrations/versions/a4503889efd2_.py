"""empty message

Revision ID: a4503889efd2
Revises: ff602a4dd58e
Create Date: 2023-09-14 15:06:32.166655

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a4503889efd2'
down_revision = 'ff602a4dd58e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ability_score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('class_proficiency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('class_proficiencies',
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('proficiency_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['proficiency_id'], ['class_proficiency.id'], )
    )
    op.create_table('class_saving_throws',
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('ability_score_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ability_score_id'], ['ability_score.id'], ),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], )
    )
    op.create_table('race_ability_bonuses',
    sa.Column('race_id', sa.Integer(), nullable=True),
    sa.Column('ability_score_id', sa.Integer(), nullable=True),
    sa.Column('bonus', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ability_score_id'], ['ability_score.id'], ),
    sa.ForeignKeyConstraint(['race_id'], ['race.id'], )
    )
    op.create_table('starting_equipment_option',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('race_optional_proficiencies')
    with op.batch_alter_table('classes', schema=None) as batch_op:
        batch_op.drop_column('saving_throw_proficiencies')

    with op.batch_alter_table('race', schema=None) as batch_op:
        batch_op.drop_column('str_bonus')
        batch_op.drop_column('dex_bonus')
        batch_op.drop_column('wis_bonus')
        batch_op.drop_column('con_bonus')
        batch_op.drop_column('int_bonus')
        batch_op.drop_column('cha_bonus')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('race', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cha_bonus', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('int_bonus', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('con_bonus', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('wis_bonus', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('dex_bonus', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('str_bonus', sa.INTEGER(), autoincrement=False, nullable=True))

    with op.batch_alter_table('classes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('saving_throw_proficiencies', sa.VARCHAR(), autoincrement=False, nullable=True))

    op.create_table('race_optional_proficiencies',
    sa.Column('race_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('proficiency_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['proficiency_id'], ['proficiency.id'], name='race_optional_proficiencies_proficiency_id_fkey'),
    sa.ForeignKeyConstraint(['race_id'], ['race.id'], name='race_optional_proficiencies_race_id_fkey')
    )
    op.drop_table('starting_equipment_option')
    op.drop_table('race_ability_bonuses')
    op.drop_table('class_saving_throws')
    op.drop_table('class_proficiencies')
    op.drop_table('class_proficiency')
    op.drop_table('ability_score')
    # ### end Alembic commands ###
